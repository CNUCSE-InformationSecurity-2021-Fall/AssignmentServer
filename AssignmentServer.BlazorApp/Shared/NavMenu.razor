@inject ProtectedSessionStorage sessionStorage
@inject NavigationManager       navManager

<div class="top-row navbar navbar-dark">
    <a class="w-100 navbar-brand text-center" href="">2021 정보보호</a>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        @if (logged)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/dashboard">
                    <span class="oi oi-home" aria-hidden="true"></span> <span>대시보드</span>
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/notice" Match="NavLinkMatch.Prefix">
                    <span class="oi oi-paperclip" aria-hidden="true"></span> <span>공지사항</span>
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="DoLogout">
                    <div class="w-100">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> <span>로그아웃</span>
                    </div>
                </NavLink>
            </li>
            @foreach (var assignment in assignments)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link d-flex" href=@string.Format("Assignment/{0}", assignment.Id)>
                        @if (assignment.Submitted)
                        {
                            <span class="oi oi-check ml-auto"></span>
                        }
                        else
                        {
                            if (timestamp < assignment.Due)
                            {
                                <span class="oi oi-warning ml-auto"></span>
                            }
                            else
                            {
                                <span class="oi oi-x ml-auto"></span>
                            }
                        }
                        <div class="nav-item-title">
                            <span>@assignment.Title</span>
                            <span class="text-muted small">@assignment.Due.ToString("MM-dd HH:mm:ss") 까지</span>
                        </div>
                    </NavLink>
                </li>
            }
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> <span>로그인</span>
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool logged = false;
    private bool collapseNavMenu = true;
    private DateTime timestamp = DateTime.Now;
    private Assignment[] assignments = new Assignment[0];

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task DoLogout()
    {
        await sessionStorage.DeleteAsync("token");
        navManager.NavigateTo("/", true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var client = new ApiClient(sessionStorage);
            var response = await client.Get("/api/student/check");
            var data = await response.Content.ReadAsStringAsync();

            logged = !string.IsNullOrEmpty(data);
            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}
